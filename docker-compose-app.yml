networks:
  ship-network:
    driver: bridge
  kafka_network:
    name: my_kafka_network  # Joins the already defined public network
    external: true

volumes:
  hexagonship-postgres-data:
    name: hexagonship-postgres-data
  minio-data:
    name: minio-data

services:
  hexagonship-frontend:
    container_name: hexagonship-frontend
    image: ddd-ship-frontend
    build:
      dockerfile: Dockerfile
      context: ship-frontend/.
    networks:
      - ship-network
    ports:
      - "80:80"
    depends_on:
      - hexagonship-service
      - hexagonship-db

  hexagonship-service:
    container_name: hexagonship-backend
    image: ddd-ship-backend
    build:
      dockerfile: Dockerfile
      context: ship-backend/.
    environment:
      SPRING_PROFILES_ACTIVE: dev
    networks:
      - ship-network
      - kafka_network
    ports:
      - "8080:8080"
    depends_on:
      - hexagonship-db

  hexagonship-db:
    container_name: hexagonship-db-postgres
    image: postgres:13.6
    networks:
      - ship-network
      - kafka_network
    environment:
      - "POSTGRES_DB=hexagonship"
      - "POSTGRES_USER=hexagonship_user"
      - "POSTGRES_PASSWORD=hexagonship_user"
    ports:
      - "5432:5432"
    volumes:
      - "hexagonship-postgres-data:/var/lib/postgresql/data"
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"
  minio:
    container_name: hexagonship-minio
    image: bitnami/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - ship-network
    volumes:
      - "~/minio/data:/data"
    environment:
      - MINIO_ROOT_USER=hexagonminio
      - MINIO_ROOT_PASSWORD=hexagonminio
      - MINIO_DEFAULT_BUCKETS=catains
